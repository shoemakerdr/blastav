{"version":3,"sources":["blastav-rocket.png","blastav-logo.svg","pat-sound-board.jpg","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","console","log","CSS","supports","react_default","a","createElement","className","id","href","src","logo","alt","patSoundBoard","rocket","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"0EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6RC4DzBC,0LAlDX,OADAC,QAAQC,IAAIC,IAAIC,SAAS,UAAW,SAEhCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,QACJJ,EAAAC,EAAAC,cAAA,KAAGG,KAAK,SAAR,QACAL,EAAAC,EAAAC,cAAA,KAAGG,KAAK,UAAR,SACAL,EAAAC,EAAAC,cAAA,KAAGG,KAAK,YAAR,YAEJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAMJ,UAAU,OAAOK,IAAI,UAEzCR,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKI,IAAKG,IAAeN,UAAU,sBAAsBK,IAAI,uBAC7DR,EAAAC,EAAAC,cAAA,sCAEJF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKI,IAAKI,IAAQP,UAAU,SAASK,IAAI,aAG7CR,EAAAC,EAAAC,cAAA,WAASE,GAAG,QAAQD,UAAU,SAC1BH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,6SAOJF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKI,IAAKI,IAAQP,UAAU,SAASK,IAAI,aAG7CR,EAAAC,EAAAC,cAAA,WAASE,GAAG,UAAUD,UAAU,WAC5BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAAR,sBAGZL,EAAAC,EAAAC,cAAA,sCAA6BF,EAAAC,EAAAC,cAAA,oBAAmBF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,8BAAR,4BA/C1CM,cCGZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BlC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBkC,MAAM,SAAAC,GACLpC,QAAQoC,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,WAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAAuB,OAAMH,WAAN,sBAEP3B,GAiDV,SAAiCO,GAE/BwB,MAAMxB,GACHI,KAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BT,OAAOC,SAASoC,aAKpBjC,EAAgBC,KAGnBY,MAAM,WACLnC,QAAQC,IACN,mEArEAuD,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,KAAK,WACjC3B,QAAQC,IACN,+GAMJqB,EAAgBC,MCzCxBkC","file":"static/js/main.802be102.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blastav-rocket.0594ec42.png\";","module.exports = __webpack_public_path__ + \"static/media/blastav-logo.c7327da8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pat-sound-board.b01b7b40.jpg\";","import React, { Component } from 'react';\nimport logo from './blastav-logo.svg';\nimport rocket from './blastav-rocket.png';\nimport patSoundBoard from './pat-sound-board.jpg'\nimport './App.css';\n// import SoundLevels from './SoundLevels'\n\nclass App extends Component {\n  render() {\n    console.log(CSS.supports('display', 'grid'))\n    return (\n        <div className='App'>\n            <nav id='home'>\n                <a href='#home'>HOME</a>\n                <a href='#about'>ABOUT</a>\n                <a href='#contact'>CONTACT</a>\n            </nav>\n            <div className='stars'></div>\n            <div className='stars2'></div>\n            <div className='stars3'></div>\n            <div className='logo-wrapper'>\n                <img src={logo} className='logo' alt='logo' />\n            </div>\n            <main>\n                <section className='quote'>\n                    <img src={patSoundBoard} className='pat-sound-board-img' alt='Pat at sound board' />\n                    <h1>The Musician's Engineer</h1>\n                </section>\n                <figure>\n                <div className='rocket-wrapper'>\n                    <img src={rocket} className='rocket' alt='rocket' />\n                </div>\n                </figure>\n                <section id='about' className='about'>\n                    <h1>ABOUT</h1>\n                    <h2>\n                        Jacksonville, FL freelance sound engineer and production tech with 3 years \n                        professional experience. Gigs ranging from working alongside big name artists, \n                        local/regional artists, churches, conferences, city events, festivals, weddings, \n                        and private events. Email for booking availability.\n                    </h2>\n                </section>\n                <figure>\n                <div className='rocket-wrapper'>\n                    <img src={rocket} className='rocket' alt='rocket' />\n                </div>\n                </figure>\n                <section id='contact' className='contact'>\n                    <h1>CONTACT</h1>\n                    <h2>Patrick Shoemaker</h2>\n                    <h2>(904) 728-5905</h2>\n                    <h2><a href='mailto:pat@blastav.com'>pat@blastav.com</a></h2>\n                </section>\n            </main>\n            <footer>Designed/developed by<span>&nbsp;</span><a href='https://derekshoemaker.com'>Derek Shoemaker</a></footer>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}